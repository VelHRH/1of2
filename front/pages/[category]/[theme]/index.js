import { useState } from "react";
import { NumberBtn } from "../../../components/NumberBtn";
import { BackBtn } from "../../../components/BackBtn";
import Link from "next/link";
import Head from "next/head";
import ChartRatings from "../../../components/ChartRatings";
import { StarRating } from "../../../components/Theme/StarRating";

export const getServerSideProps = async (context) => {
 const { category, theme } = context.params;
 const res = await fetch(
  `http://localhost:4444/categories/${category}/${theme}`
 );
 const data = await res.json();
 if (!data) {
  return {
   notFound: true,
  };
 }
 return {
  props: { theme: data[0] },
 };
};

const Theme = ({ theme }) => {
 const [clickedMode, setClickedMode] = useState("8");
 const [yourRating, setYourRating] = useState(0);
 const handleModeChoice = (mode) => {
  setClickedMode(mode);
 };

 const DataRatings = () => {
  let nOf5 = 0,
   nOf4 = 0,
   nOf3 = 0,
   nOf2 = 0,
   nOf1 = 0;
  for (let i of theme.stars) {
   if (i.stars === 5) nOf5++;
   if (i.stars === 4) nOf4++;
   if (i.stars === 3) nOf3++;
   if (i.stars === 2) nOf2++;
   if (i.stars === 1) nOf1++;
  }
  return [
   {
    avg:
     (nOf5 * 5 + nOf4 * 4 + nOf3 * 3 + nOf2 * 2 + nOf1 * 1) /
     (nOf5 + nOf4 + nOf3 + nOf2 + nOf1),
   },
   nOf1 !== 0 && { value: (100 / (nOf5 + nOf4 + nOf3 + nOf2 + nOf1)) * nOf1 },
   nOf2 !== 0 && { value: (100 / (nOf5 + nOf4 + nOf3 + nOf2 + nOf1)) * nOf2 },
   nOf3 !== 0 && { value: (100 / (nOf5 + nOf4 + nOf3 + nOf2 + nOf1)) * nOf3 },
   nOf4 !== 0 && { value: (100 / (nOf5 + nOf4 + nOf3 + nOf2 + nOf1)) * nOf4 },
   nOf5 !== 0 && {
    value: (100 / (nOf5 + nOf4 + nOf3 + nOf2 + nOf1)) * nOf5,
   },
  ];
 };

 return (
  <div className="w-full flex">
   <Head>
    <title>{theme.name}</title>
    <meta name="description" content="Generated by create next app" />
    <link rel="icon" href="/favicon.ico" />
   </Head>
   <div className="flex-1 h-screen bg-slate-50 dark:bg-slate-800 p-10">
    <Link href={`/${theme.category}`}>
     <BackBtn>{theme.category}</BackBtn>
    </Link>
    <h1 className="text-4xl mb-7 dark:text-slate-50 capitalize">
     {theme.name}
    </h1>
    <img
     src={theme.imgUrl}
     alt="Subcategory"
     className="h-[350px] w-full object-cover"
    />
    <div className="grid gap-4 grid-cols-4 mt-5 w-full">
     <NumberBtn
      isClicked={clickedMode === "8"}
      handleModeChoice={handleModeChoice}
     >
      8
     </NumberBtn>
     <NumberBtn
      isClicked={clickedMode === "16"}
      handleModeChoice={handleModeChoice}
     >
      16
     </NumberBtn>
     <NumberBtn
      isClicked={clickedMode === "32"}
      handleModeChoice={handleModeChoice}
     >
      32
     </NumberBtn>
     <NumberBtn
      isClicked={clickedMode === "64"}
      handleModeChoice={handleModeChoice}
     >
      64
     </NumberBtn>
     <Link
      href={`/1of2/${theme.category}/${theme.name}/rating`}
      className="text-xl md:text-2xl flex justify-center py-2 dark:text-slate-900 text-slate-50 bg-gradient-to-r from-cyan-500 to-blue-600 cursor-pointer rounded-2xl hover:scale-110 ease-in-out duration-500 items-center"
     >
      Rating
     </Link>
     <div className="text-xl md:text-2xl flex justify-center py-2 dark:text-slate-900 text-slate-50 bg-gradient-to-r from-cyan-500 to-blue-600 cursor-pointer rounded-2xl hover:scale-110 ease-in-out duration-500 items-center">
      Share
     </div>
     <div
      onClick={() => setIsGame(true)}
      className="text-xl md:text-2xl col-span-2 flex justify-center py-2 dark:text-slate-900 text-slate-50 bg-gradient-to-r from-lime-500 to-green-600 cursor-pointer rounded-2xl hover:scale-105 ease-in-out duration-500"
     >
      Start
     </div>
    </div>
   </div>
   <div className="w-[25%] bg-slate-100 dark:bg-slate-900 min-h-screen p-10 flex flex-col items-center">
    <StarRating yourRating={yourRating} setYourRating={setYourRating} />
    <h1 className="text-3xl mb-5 mt-16 dark:text-slate-50">
     Community: {DataRatings()[0].avg.toFixed(2)}
    </h1>
    <ChartRatings data={DataRatings().slice(1)} />
    <div className="text-xl dark:text-slate-50 mt-5">
     Based on {theme.stars.length} votes
    </div>
   </div>
  </div>
 );
};

export default Theme;
